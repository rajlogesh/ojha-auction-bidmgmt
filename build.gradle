plugins {
	id 'org.springframework.boot' version '2.7.0'
	id 'org.sonarqube' version '2.8'
	id 'io.spring.dependency-management' version '1.0.11.RELEASE'
	id 'java'
	id 'eclipse'
}

apply from: file('gradle/sonar.gradle')

group = "$projectGroup"
description = "$projectDescription"
version = getVersion()
sourceCompatibility = '11'
targetCompatibility = '11'

// Returns the version for the artifact built
def getversion() {
	String buildNumber = System.getenv("BUILD_NUMBER") ? System.getenv("BUILD_NUMBER") : "0"
	String branch = System.getenv("BRANCH_NAME") ? System.getenv("BRANCH_NAME") : "LOCAL"
	if("$branch" == "develop" || "$branch".contains("release")) {
		return "$releaseVersion"
	}
	return "$releaseVersion-$buildNumber-dev"
}

configurations {
	compileOnly {
		extendsFrom annotationProcessor
	}
}

repositories {
	mavenCentral()
}

ext {
	set('springCloudServicesVersion', "2.4.1")
	set('springCloudVersion', "2020.0.2")
}

dependencies {
	implementation 'org.springframework.boot:spring-boot-starter-actuator'
	implementation 'org.springframework.boot:spring-boot-starter-amqp'
	implementation 'org.springframework.boot:spring-boot-starter-data-mongodb'
	implementation 'org.springframework.boot:spring-boot-starter-web'
	compileOnly 'org.projectlombok:lombok'
	runtimeOnly 'io.micrometer:micrometer-registry-prometheus'
	annotationProcessor 'org.projectlombok:lombok'
	//implementation 'io.pivotal.spring.cloud:spring-cloud-services-starter-circuit-breaker'
	implementation 'org.springdoc:springdoc-openapi-ui:1.6.9'
	testImplementation 'org.springframework.boot:spring-boot-starter-test'
	testImplementation 'org.springframework.amqp:spring-rabbit-test'
}

dependencyManagement {
	imports {
		mavenBom "io.pivotal.spring.cloud:spring-cloud-services-dependencies:${springCloudServicesVersion}"
		mavenBom "org.springframework.cloud:spring-cloud-dependencies:${springCloudVersion}"
	}
}

tasks.named('test') {
	useJUnitPlatform()
}
